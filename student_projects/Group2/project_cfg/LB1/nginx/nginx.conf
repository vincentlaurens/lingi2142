# LB1 web-server Upstream server with HTTP load balancing
#user  nobody;
worker_processes  1; #number of processes for this server (default=1)

#Specifying log files
error_log  logs/error-CA1.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#specifying the file to store the master process pid
#note : required to be different since hosts share the same filesystem
pid        /var/run/nginx-LB1.pid;

#events context defining general directives on connection handling
events {
    worker_connections  1024; #max number of connections for one worker process
}

#http context defining how to handle http traffic
http {
    #defining supported types of file (default configuration used here)
    include       /usr/local/nginx/conf/mime.types;
    default_type  application/octet-stream;

    #Enables or disables the use of sendfile() and configuration
    sendfile        on;
    #aio	    on; #asynchronous sendfile
    
    #options below used only when sendfile is on
    #tcp_nopush     on; #
    #tcp_nodelay    on;

    #connection keepalive (default = 75)
    #keepalive_timeout  0;
    keepalive_timeout  65;

    #compression (default = off)
    #gzip  on;


    #defining the upstream server
    
    upstream backend {
	#defining the load-balancing technique (default=round-robin)
	#least_conn; #least number of connections first
	
	#Assign weight to servers (default = 1)
	#example : server backend1.example.com weight=5;

	#list of all the servers that should be in http load-balancing
        server web11.group2.ingi weight=5;
        server web12.group2.ingi weight=5;
    }

    #upstream server configuration
    server {
	#listen on every incoming request on port 80 in ipv6 only
        listen       [::]:80 default ipv6only=on;
        server_name  www.group2.ingi;

	#default location
	location / {
	    #Each request is redirected to the upstream server
	    #the upstream server will then perform load-balancing
	    proxy_pass http://backend;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
